# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/01_bt.ipynb.

# %% auto 0
__all__ = ['AranetDevice', 'AranetScanner']

# %% ../nbs/01_bt.ipynb 4
from dataclasses import dataclass, field
from datetime import datetime, timedelta
from typing import Any, Dict, List, Union

import aranet4
import pandas as pd
import rich


@dataclass
class AranetDevice:
    address: str
    name: str

    def get_current_readings(self) -> aranet4.client.CurrentReading:
        """fetch the current readings from the device"""
        return aranet4.client.get_current_readings(self.address)

    def get_history(
        self, entry_filter: Dict, as_df: bool = True
    ) -> Union[pd.DataFrame, List[aranet4.client.RecordItem]]:
        """fetch the history from the device"""
        records = aranet4.client.get_all_records(
            self.address,
            entry_filter,
            remove_empty=True,  # This will remove blank records, if range parameters (start,end,last) are specified
        )

        if as_df:
            return pd.DataFrame(records.value)
        else:
            return records


class AranetScanner:
    def __init__(self):
        self.devices: Dict[str, AranetDevice] = dict()

    def on_scan(self, advertisement: Any) -> None:
        device = AranetDevice(
            address=advertisement.device.address,
            name=advertisement.device.name,
        )

        self.devices[device.address] = device

    def find_nearby(self, duration: int = 5):
        print("Scanning Aranet4 devices...")
        aranet4.client.find_nearby(self.on_scan, duration)
        print(f"\nFound {len(self.devices)} devices:\n")

# %% ../nbs/01_bt.ipynb 5
import fastcore.foundation

if not fastcore.foundation.in_ipython():
    scanner = AranetScanner()
    scanner.find_nearby()

    for _, device in scanner.devices.items():
        # rich.inspect(device)
        rich.inspect(device.get_current_readings())
        records = device.get_history(
            entry_filter={"start": datetime.now() - timedelta(minutes=30)}, as_df=True
        )

        print(f"downloaded {len(records)} records for {device.name} ({device.address})")
